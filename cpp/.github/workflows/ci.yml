name: C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++-13 ninja-build libspdlog-dev
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
    
    - name: Install LibTorch
      run: |
        wget -q https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-2.1.0%2Bcpu.zip
        unzip -q libtorch-cxx11-abi-shared-with-deps-2.1.0+cpu.zip
        echo "LIBTORCH_DIR=$PWD/libtorch" >> $GITHUB_ENV
    
    - name: Configure
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_PREFIX_PATH=$LIBTORCH_DIR
    
    - name: Build
      run: |
        cd build
        make -j $(nproc)
    
    - name: Test
      run: |
        cd build
        ctest --output-on-failure

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install LibTorch
      run: |
        curl -L -o libtorch.zip https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-2.1.0%2Bcpu.zip
        7z x libtorch.zip
        echo "LIBTORCH_DIR=$PWD/libtorch" >> $GITHUB_ENV
    
    - name: Configure
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_PREFIX_PATH=$LIBTORCH_DIR
    
    - name: Build
      run: |
        cd build
        cmake --build . --config Release
    
    - name: Test
      run: |
        cd build
        ctest --output-on-failure --build-config Release

  clang-tidy:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++-13 clang-tidy-15 ninja-build libspdlog-dev
        sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-15 100
    
    - name: Install LibTorch
      run: |
        wget -q https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-2.1.0%2Bcpu.zip
        unzip -q libtorch-cxx11-abi-shared-with-deps-2.1.0+cpu.zip
        echo "LIBTORCH_DIR=$PWD/libtorch" >> $GITHUB_ENV
    
    - name: Configure
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_PREFIX_PATH=$LIBTORCH_DIR -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
    
    - name: Run clang-tidy
      run: |
        find src -name "*.cpp" | xargs clang-tidy -p build/compile_commands.json

  asan-ubsan:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++-13 ninja-build libspdlog-dev
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
    
    - name: Install LibTorch
      run: |
        wget -q https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-2.1.0%2Bcpu.zip
        unzip -q libtorch-cxx11-abi-shared-with-deps-2.1.0+cpu.zip
        echo "LIBTORCH_DIR=$PWD/libtorch" >> $GITHUB_ENV
    
    - name: Configure with sanitizers
      run: |
        mkdir -p build-asan
        cd build-asan
        cmake .. -DCMAKE_PREFIX_PATH=$LIBTORCH_DIR -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer"
    
    - name: Build with sanitizers
      run: |
        cd build-asan
        make -j $(nproc)
    
    - name: Test with sanitizers
      run: |
        cd build-asan
        ASAN_OPTIONS=detect_leaks=0 ctest --output-on-failure
